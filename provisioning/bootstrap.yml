---
- hosts: all
  vars:
    owner: root
    streams:
      - url: "webcast.sermonaudio.com/sa"
        key: "some-sa-key"
      - url: "a.rtmp.youtube.com/live2"
        key: "some-youtube-key"
  tasks:
    - name: Ensure directories exist
      file: path={{ item.path }}
        state=directory
        mode={{ item.mode }}
        owner={{ owner }}
        group={{ owner }}
      with_items:
        - path: /var/www/html
          mode: "0755"
        - path: /var/www/live
          mode: "0755"
        - path: /etc/systemd/system
          mode: "0755"
      tags:
        - frontend
    - name: Ensure directories exist - Alpine
      file: path={{ item.path }}
          state=directory
          mode="{{ item.mode }}"
          owner={{ owner }}
          group={{ owner }}
      with_items:
        - path: /lib64
          mode: "0755"
      when: ansible_os_family == "Alpine"
    - name: Install packages - Debian
      apt:
        pkg:
          - build-essential
          - unzip
        update_cache: yes
        state: present
      tags:
        - backend
      when: ansible_os_family == 'Debian'
    - name: Install packages - Alpine
      command: "apk add --no-cache --virtual .build-deps alpine-sdk unzip perl linux-headers"
      when: ansible_os_family == 'Alpine'
    - name: Download components
      get_url:
        url: "{{ item.url }}"
        dest: "${HOME}/{{ item.dest }}"
      with_items:
        - dest: nginx-1.18.0.tar.gz
          url: https://nginx.org/download/nginx-1.18.0.tar.gz
        - dest: nginx-rtmp-module.zip
          url: https://github.com/sergey-dryabzhinsky/nginx-rtmp-module/archive/dev.zip
        - dest: zlib-1.2.11.tar.gz
          url: http://zlib.net/zlib-1.2.11.tar.gz
        - dest: pcre-8.44.tar.gz
          url: https://ftp.pcre.org/pub/pcre/pcre-8.44.tar.gz
        - dest: openssl-1.1.1k.tar.gz
          url: https://www.openssl.org/source/openssl-1.1.1k.tar.gz
        - dest: go1.14.4.linux-amd64.tar.gz
          url: https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz
      tags:
        - proxy
    - name: Unzip components
      unarchive:
        src: "${HOME}/{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: yes
      with_items:
        - src: nginx-1.18.0.tar.gz
          dest: "${HOME}"
        - src: nginx-rtmp-module.zip
          dest: "${HOME}"
        - src: zlib-1.2.11.tar.gz
          dest: "${HOME}"
        - src: pcre-8.44.tar.gz
          dest: "${HOME}"
        - src: openssl-1.1.1k.tar.gz
          dest: "${HOME}"
        - src: go1.14.4.linux-amd64.tar.gz
          dest: /usr/local
      tags:
        - proxy
    - name: Copy files over
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: yes
        owner: "{{ owner }}"
        group: "{{ owner }}"
      with_items:
        - src: ../client/index.html
          dest: /var/www/html/index.html
        - src: ../client/app.js
          dest: /var/www/html/app.js
        - src: ../client/app.css
          dest: /var/www/html/app.css
        - src: streaming-server.service
          dest: /etc/systemd/system/streaming-server.service
        - src: nginx.service
          dest: /etc/systemd/system/nginx.service
      tags:
        - frontend
    - name: Copy over go files
      copy: src="{{ item }}"
        dest="${HOME}/"
      with_fileglob:
        - "../*.go"
        - "../*.mod"
        - "../*.sum"
      tags:
        - backend
    - name: Symlink Go
      file: src="/usr/local/go/bin/{{ item }}"
        dest="/usr/local/bin/{{ item }}"
        state=link
      with_items:
        - go
        - gofmt
      tags:
        - backend
    - name: Symlink libc - Alpine
      file: src="/lib/libc.musl-x86_64.so.1"
        dest="/lib64/ld-linux-x86-64.so.2"
        state=link
      tags:
        - backend
      when: ansible_os_family == "Alpine"
    - name: Compile backend
      command: "go build -o /usr/bin/streaming-server"
      args:
        chdir: "${HOME}"
      become: true
      tags:
        - backend
    - name: Configure nginx
      command: |
       ./configure --with-http_ssl_module --with-zlib=../zlib-1.2.11 --add-module=../nginx-rtmp-module-dev --with-pcre=../pcre-8.44 --with-openssl=../openssl-1.1.1k
      args:
        chdir: "${HOME}/nginx-1.18.0"
      tags:
        - proxy
    - name: Build nginx
      make:
        chdir: "${HOME}/nginx-1.18.0"
      tags:
        - proxy
    - name: Install nginx
      make:
        chdir: "${HOME}/nginx-1.18.0"
        target: install
      become: yes
      tags:
        - proxy
    - name: Send our config over
      template:
        src: nginx.conf.j2
        dest: /usr/local/nginx/conf/nginx.conf
        force: yes
      tags:
        - proxy
    - name: Start the streaming server
      systemd: name="{{ item }}"
        enabled=yes
        state=restarted
        force=yes
      with_items:
        - streaming-server
        - nginx
      tags:
        - proxy
        - backend
